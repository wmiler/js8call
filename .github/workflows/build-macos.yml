name: Build for MacOS 15 Arm64 (M1 and higher)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_macos-latest:
    runs-on: macos-15

    steps:
    - uses: actions/checkout@v4
    
    - name: Install CMake
      run: |
        brew update
        brew install cmake
        
    - name: Install Ninja
      run: brew install ninja

    - name: Install libusb
      run: brew install libusb

    - name: Install Hamlib
      run: brew install hamlib

#    - name: Install fftw
#      run: brew install fftw

    - name: Install Boost
      run: brew install boost

    - name: Install QT6
      run: brew install qt

    - name: Download dependencies
      run: |
        mkdir ~/development && mkdir ~/development/js8libs
        cd ~/development
        
#        wget -q https://github.com/libusb/libusb/releases/download/v1.0.29/libusb-1.0.29.tar.bz2
#        wget -q https://github.com/Hamlib/Hamlib/releases/download/4.6.4/hamlib-4.6.4.tar.gz
#        wget -q https://fftw.org/fftw-3.3.10.tar.gz
#        wget -q https://archives.boost.io/release/1.88.0/source/boost_1_88_0.tar.gz

#        tar jxf libusb-1.0.29.tar.bz2
#        tar zxf hamlib-4.6.4.tar.gz
#        tar zxf fftw-3.3.10.tar.gz
#        tar zxf boost_1_88_0.tar.gz
        
#    - name: Build and install libusb
#      run: |
#        cd ~/development/libusb-1.0.29 \
#            && ./configure --prefix=/Users/runner/development/js8libs \
#            && make \
#            && make install \
#            && make clean

#    - name: Build and install Hamlib
#      run: |
#        cd ~/development/hamlib-4.6.4 \
#            && ./configure --prefix=/Users/runner/development/js8libs \
#            && make \
#            && make install \
#            && make clean

    - name: Build and install fftw
      run: |
       cd ~/development/fftw-3.3.10 \
            && ./configure CFLAGS=-mmacosx-version-min=11.0 \
                    --prefix=/Users/runner/development/js8libs \
                    --enable-single \
                    --enable-threads \
                    --enable-neon
        make \
        && make install \
        && make clean

#    - name: Build and install Boost
#      run: |
#        cd ~/development/boost_1_88_0 \
#            && ./bootstrap.sh --prefix=/Users/runner/development/js8libs \
#            && ./b2 -a -q \
#            && ./b2 -a -q install \
#            && ./b2 --clean

#    - name: Build and install QT6.8.1 (will prolly run out of disk space here)
#      run: |
#        cd ~/development && git clone https://github.com/qt/qt5.git qt6
#        cd qt6
#        git switch 6.8.1
#        ./init-repository
#        mkdir ~/development/qt6-build && cd ~/development/qt6-build \
#            && ../qt6/configure -prefix /Users/runner/development/js8libs -Wno-dev \
#            && cmake --build . --parallel \
#            && cmake --install .

    - name: Build JS8Call 
      run: |
        git clone https://github.com/js8call/js8call.git ~/development/js8call
        mkdir -p ~/development/js8call/build && cd ~/development/js8call/build
        cmake -DCMAKE_PREFIX_PATH=/Users/runner/development/js8libs;/opt/homebrew ..
        make -j 4

    - name: Upload Artifact (app)
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_arm64_macos15.app
        path: ~/development/js8call/build/js8call.app
        retention-days: 7
