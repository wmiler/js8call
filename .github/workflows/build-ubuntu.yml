permissions:
  contents: read

name: Build for Debian x86_64 and Arm64

on:
  push:
    branches: [ "main" ]
    paths:
      '.github/workflows/build-ubuntu.yml'
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_amd64_2404:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git cmake libhamlib-dev qt6-base-dev qt6-multimedia-dev qt6-serialport-dev \
          libusb-1.0-0-dev libfftw3-dev libboost-all-dev libudev-dev libxkbcommon-dev libfuse2 imagemagick

    - name: Build Hamlib
      run: |
        git clone https://github.com/Hamlib/Hamlib.git ~/hamlib
        cd ~/hamlib
        git checkout 4.6.4
        ./bootstrap
        ./configure
        make -j 4
        sudo make install-strip
        sudo ldconfig

    - name: Build JS8Call 
      run: |
        git clone https://github.com/js8call/js8call.git ~/js8call
        mkdir -p ~/js8call/build && cd ~/js8call/build
        cmake ..
        make -j 4

    - name: Package JS8Call (deb)
      run: |
        cd ~/js8call/build
        cpack -G DEB

    - name: Upload Artifact (deb)
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_amd64_ubuntu-24.04.deb
        path: ~/js8call/build/js8call_2.3.2-devel_amd64.deb

    - name: Package JS8Call AppImage (amd64)
      run: |
        mkdir -p ~/appimage/AppDir
        cd ~/js8call/build
        wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage \
          && wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage \
          && chmod +x linuxdeploy*.AppImage \
          && ./linuxdeploy-x86_64.AppImage --appimage-extract \
          && mv squashfs-root linuxdeploy \
          && ./linuxdeploy-plugin-qt-x86_64.AppImage --appimage-extract \
          && mv squashfs-root linuxdeploy-plugin-qt \
          && rm *.AppImage

        make DESTDIR=~/appimage/AppDir install
        
        test -f ~/appimage/AppDir/usr/share/applications/js8call.desktop || \
          cp ~/js8call/js8call.desktop ~/appimage/AppDir/usr/share/applications/ && \
        if [ ! -f ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png ]; then \
        mkdir -p ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps && \
        convert ~/js8call/artwork/js8call_icon.png -resize 128x128 \
            ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png; \
        fi
        cd ~/appimage

        echo "~/js8call/build/linuxdeploy/usr/bin:~/js8call/build/linuxdeploy-plugin-qt/usr/bin/" >> "$GITHUB_PATH"
        ln -s ~/js8call/build/linuxdeploy-plugin-qt/usr/bin/linuxdeploy-plugin-qt ~/js8call/build/linuxdeploy/usr/bin/
        
        EXEC_PATH=$(find AppDir -type f -name "js8call" -executable | head -1) && \
          echo "Found executable at: $EXEC_PATH" && \
          ~/js8call/build/linuxdeploy/usr/bin/linuxdeploy --appdir AppDir \
          --executable "$EXEC_PATH" \
          --plugin qt \
          --output appimage \
          --desktop-file AppDir/usr/share/applications/js8call.desktop \
          --icon-file AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png
        
    - name: Upload AppImage Artifact
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_x86_64_ubuntu-24.04.AppImage
        path: ~/appimage/js8call-x86_64.AppImage
        
  build_arm64_2404:
    runs-on: ubuntu-24.04-arm

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git cmake libhamlib-dev qt6-base-dev qt6-multimedia-dev qt6-serialport-dev \
          libusb-1.0-0-dev libfftw3-dev libboost-all-dev libudev-dev libxkbcommon-dev libfuse2 imagemagick

    - name: Build Hamlib
      run: |
        git clone https://github.com/Hamlib/Hamlib.git ~/hamlib
        cd ~/hamlib
        git checkout 4.6.4
        ./bootstrap
        ./configure
        make -j 4
        sudo make install-strip
        sudo ldconfig

    - name: Build JS8Call
      run: |
        git clone https://github.com/js8call/js8call.git ~/js8call
        mkdir -p ~/js8call/build && cd ~/js8call/build
        cmake ..
        make -j 4

    - name: Package JS8Call (deb)
      run: |
        cd ~/js8call/build
        cpack -G DEB

    - name: Upload Artifact (deb)
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_arm64_ubuntu-24.04.deb
        path: ~/js8call/build/js8call_2.3.2-devel_arm64.deb
        
    - name: Package JS8Call AppImage (arm64)
      run: |
        mkdir -p ~/appimage/AppDir
        cd ~/js8call/build
        wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-aarch64.AppImage \
          && wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-aarch64.AppImage \
          && chmod +x linuxdeploy*.AppImage \
          && ./linuxdeploy-aarch64.AppImage --appimage-extract \
          && mv squashfs-root linuxdeploy \
          && ./linuxdeploy-plugin-qt-aarch64.AppImage --appimage-extract \
          && mv squashfs-root linuxdeploy-plugin-qt \
          && rm *.AppImage

        make DESTDIR=~/appimage/AppDir install
        
        test -f ~/appimage/AppDir/usr/share/applications/js8call.desktop || \
          cp ~/js8call/js8call.desktop ~/appimage/AppDir/usr/share/applications/ && \
        if [ ! -f ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png ]; then \
        mkdir -p ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps && \
        convert ~/js8call/artwork/js8call_icon.png -resize 128x128 \
            ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png; \
        fi
        cd ~/appimage

        echo "~/js8call/build/linuxdeploy/usr/bin:~/js8call/build/linuxdeploy-plugin-qt/usr/bin/" >> "$GITHUB_PATH"
        ln -s ~/js8call/build/linuxdeploy-plugin-qt/usr/bin/linuxdeploy-plugin-qt ~/js8call/build/linuxdeploy/usr/bin/
        
        EXEC_PATH=$(find AppDir -type f -name "js8call" -executable | head -1) && \
          echo "Found executable at: $EXEC_PATH" && \
          ~/js8call/build/linuxdeploy/usr/bin/linuxdeploy --appdir AppDir \
          --executable "$EXEC_PATH" \
          --plugin qt \
          --output appimage \
          --desktop-file AppDir/usr/share/applications/js8call.desktop \
          --icon-file AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png
        
    - name: Upload AppImage Artifact
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_aarch64_ubuntu-24.04.AppImage
        path: ~/appimage/js8call-aarch64.AppImage
        
# ### Beware! Monsters live here! ###
  build_x86_64_Debian12:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        uname -a
        apt-get update
        apt-get install -y build-essential git cmake curl wget automake libtool libfuse2 imagemagick \
          qt6-base-dev qt6-multimedia-dev qt6-serialport-dev \
          libusb-1.0-0-dev libfftw3-dev libudev-dev libxkbcommon-dev \
          libhamlib-dev

    - name: Install Boost 1.88
      id: install-boost
      run: |
        curl --location --output ./boost-1.88.0.tar.gz https://archives.boost.io/release/1.88.0/source/boost_1_88_0.tar.gz
        tar zxf boost-1.88.0.tar.gz
        cd boost_1_88_0
        ./bootstrap.sh
        ./b2 install

    - name: Build Hamlib
      run: |
        git clone https://github.com/Hamlib/Hamlib.git ~/hamlib
        cd ~/hamlib
        git checkout 4.6.4
        ./bootstrap
        ./configure
        make -j 4
        make install-strip
        ldconfig

    - name: Checkout QT 6.4.2
      run: |
        pwd
        git clone https://github.com/qt/qt5.git qt6
        cd qt6
        git switch 6.4.2
        ./init-repository --module-subset=essential,qtmultimedia,qtserialport,qtsvg,qtshadertools,qttools
        mkdir ./build
        cd build
        ../configure
          
    - name: Build QT 6.4.2
      run: |
        pwd
        cd qt6/build
        cmake --build . --parallel 4
        cmake --install .

    - name: Build JS8Call 
      run: |
        git clone https://github.com/js8call/js8call.git ~/js8call
        mkdir -p ~/js8call/build && cd ~/js8call/build
        cmake ..
        make -j 4

    - name: Package JS8Call (deb)
      run: |
        cd ~/js8call/build
        cpack -G DEB

    - name: Upload Artifact (deb)
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_x86_64_debian-12.deb
        path: ~/js8call/build/js8call_2.3.2-devel_amd64.deb

    - name: Package JS8Call Debian 12 AppImage (x86_64)
      run: |
        mkdir -p ~/appimage/AppDir
        cd ~/js8call/build
        wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage \
          && wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage \
          && chmod +x linuxdeploy*.AppImage \
          && ./linuxdeploy-x86_64.AppImage --appimage-extract \
          && mv squashfs-root linuxdeploy \
          && ./linuxdeploy-plugin-qt-x86_64.AppImage --appimage-extract \
          && mv squashfs-root linuxdeploy-plugin-qt \
          && rm *.AppImage

        make DESTDIR=~/appimage/AppDir install
        
        test -f ~/appimage/AppDir/usr/share/applications/js8call.desktop || \
          cp ~/js8call/js8call.desktop ~/appimage/AppDir/usr/share/applications/ && \
        if [ ! -f ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png ]; then \
        mkdir -p ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps && \
        convert ~/js8call/artwork/js8call_icon.png -resize 128x128 \
            ~/appimage/AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png; \
        fi
        cd ~/appimage

        echo "~/js8call/build/linuxdeploy/usr/bin:~/js8call/build/linuxdeploy-plugin-qt/usr/bin/" >> "$GITHUB_PATH"
        ln -s ~/js8call/build/linuxdeploy-plugin-qt/usr/bin/linuxdeploy-plugin-qt ~/js8call/build/linuxdeploy/usr/bin/
        
        EXEC_PATH=$(find AppDir -type f -name "js8call" -executable | head -1) && \
          echo "Found executable at: $EXEC_PATH" && \
          ~/js8call/build/linuxdeploy/usr/bin/linuxdeploy --appdir AppDir \
          --executable "$EXEC_PATH" \
          --plugin qt \
          --output appimage \
          --desktop-file AppDir/usr/share/applications/js8call.desktop \
          --icon-file AppDir/usr/share/icons/hicolor/128x128/apps/js8call_icon.png
        
    - name: Upload AppImage Artifact
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_x86_64_debian-12.AppImage
        path: ~/appimage/js8call-x86_64.AppImage
