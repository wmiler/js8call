name: Build for Windows 10+ amd64

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_windows-2022:
    runs-on: self-hosted

    steps:
    - name: Gather Facts
      id: facts
      run : |
          Get-PSDrive -PSProvider FileSystem | Format-Table -AutoSize -Wrap
          Get-CIMInstance -Class Win32_Processor | Select-Object -Property Name
          Get-CIMInstance Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum | Format-Table @{n="TotalPhysicalMemory";e={$_.Sum}}
          $BUILD_DRIVE = Split-Path $env:GITHUB_WORKSPACE -Qualifier
          echo "drive=$BUILD_DRIVE" >> $env:GITHUB_OUTPUT

    - run: git config --global core.autocrlf input
    - uses: actions/checkout@v4
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git python base-devel make unzip
        pacboy: >-
          toolchain:p
          autotools:p
          cmake:p
          ninja:p
          libusb:p
          wget:p
          boost:p
          fftw:p
          qt6:p
          qt6-tools:p
          sqlite3:p
          nsis:p
          
#    - shell: msys2 {0}
#      run: |
#        uname -a
#        env

    - name: Setup build directories
      shell: msys2 {0}
      run: |
        pwd
        mkdir -p js8libs
        mkdir -p build

# Once these are active, need to remove qt and qt-tools from pacboy install above
#    - name: Download qt663-windows-msys2-binaries
#      uses: actions/download-artifact@v5
#      with:
#        repository: wmiler/js8call
#        run-id: replace-me
#        artifact-ids: replace-me
#        github-token: ${{ secrets.GITHUB_TOKEN }}
#        path: /msys64/mingw64/

#    - name: Install QT 6.6.3
#      shell: msys2 {0}
#      run: |
#        pwd
#        cd js8libs
#        tar xf ../js8call/qt663b-windows-msys2-binaries.tar
#        ls -l

    - name: Download hamlib-windows-msys2-binaries
      uses: actions/download-artifact@v5
      with:
        repository: wmiler/js8call
        run-id: 17105686888
        artifact-ids: 3811637899
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path: /msys64/mingw64/

#    - name: Install hamlib
#      shell: msys2 {0}
#      run: |
#        pwd
#        ls -lR
#        cd js8libs
#        tar xf ../hamlib-windows-msys2-binaries.tar
#        ls -l

    - name: Install OmniRig
      run: |
        winget install --id=AfreetSoftware.OmniRig -e --accept-source-agreements
        
# Hackish to be removed once we have a good QT 6.6.3 working
    - name: Patch CMakeLists.txt (remove dumpcpp requirements)
      shell: msys2 {0}
      run: |
        pwd
        cd build
        sed -i '353,368d' ../CMakeLists.txt
        sed -i '3i\set\(AXSERVERSRCS "C:/Program Files (x86)/Afreet/OmniRig/OmniRig.exe")' ../CMakeLists.txt
        
    - name: Build JS8Call 
      shell: msys2 {0}
      run: |
        cd ./build
        cmake -G "MinGW Makefiles" ..
        cmake --build . --config Release --target package --verbose
        tar cf /home/runneradmin/build.tar ../js8call

#    - name: What directory are we in?
#      run: |
#        Get-ChildItem -Path "C:\a\*.tar" -Recurse | Select @{Name="MB Size";Expression={ "{0:N1}" -f ($_.Length / 1MB) }}, Fullname, LastWriteTime;
      
    - name: Upload Artifact (from self-hosted)
      if: ${{ contains(runner.labels, 'self-hosted') }}
      uses: actions/upload-artifact@v4
      with:
        name: build.tar
        path: "C:/actions-runner/_work/_temp/msys64/home/runneradmin/build.tar"
        retention-days: 7

    - name: Upload Artifact (from Github runner)
      if: ${{ !contains(runner.labels, 'self-hosted') }}
      uses: actions/upload-artifact@v4
      with:
        name: build.tar
        path: "C:/a/_temp/msys64/home/runneradmin/build.tar"
        retention-days: 7
