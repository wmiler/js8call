name: Build for Windows 10+ amd64

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_windows-2022:
    runs-on: self-hosted

    steps:
    - name: Gather Facts
      id: facts
      run : |
          Get-PSDrive -PSProvider FileSystem | Format-Table -AutoSize -Wrap
          Get-CIMInstance -Class Win32_Processor | Select-Object -Property Name
          Get-CIMInstance Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum | Format-Table @{n="TotalPhysicalMemory";e={$_.Sum}}
          $BUILD_DRIVE = Split-Path $env:GITHUB_WORKSPACE -Qualifier
          echo "drive=$BUILD_DRIVE" >> $env:GITHUB_OUTPUT

    - run: git config --global core.autocrlf input
    - uses: actions/checkout@v4
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git python base-devel make unzip
        pacboy: >-
          toolchain:p
          autotools:p
          cmake:p
          ninja:p
          libusb:p
          wget:p
          boost:p
          fftw:p
          qt6:p
          qt6-tools:p
          sqlite3:p
          nsis:p
          
    - shell: msys2 {0}
      run: |
        uname -a
        env
      
    - name: Setup build directories
      shell: msys2 {0}
      run: |
        mkdir -p ~/development && mkdir -p ~/development/js8libs
        git clone https://github.com/js8call/js8call.git ~/development/js8call
        mkdir -p ~/development/js8call/build
     
    - shell: msys2 {0}
      name: Build Hamlib
      run: |
        git clone https://github.com/Hamlib/Hamlib.git ~/development/hamlib
        cd ~/development/hamlib
        git checkout 4.6.4
        ./bootstrap
        ./configure
        make -j 4
        make install-strip

    - name: Install OmniRig
      run: |
        winget install --id=AfreetSoftware.OmniRig -e --accept-source-agreements
        
#        This just returns the file path to omnirig
#        /mingw64/bin/dumpcpp-qt6.exe -getfile {4FE359C5-A58F-459D-BE95-CA559FB4F270}

    - name: Build JS8Call 
      shell: msys2 {0}
      run: |
        cd ~/development/js8call/build
        sed -i 's/COMMAND ${DUMPCPP} -getfile {4FE359C5-A58F-459D-BE95-CA559FB4F270}/ /g' ../CMakeLists.txt
        sed -i 's/OUTPUT_VARIABLE AXSERVER/set\(AXSERVER, "C:\\Program Files\ \(x86\)\\Afreet\\OmniRig\\OmniRig.exe")/g' ../CMakeLists.txt
        cmake -G "MinGW Makefiles" -DDUMPCPP=/mingw64/bin/dumpcpp-qt6.exe -DDUMPCPP_Executable=dumpcpp-qt6.exe ..
        cmake --build . --config Release --target package --verbose
        tar cf /home/runneradmin/build.tar ~/development/js8call

#    - name: What directory are we in?
#      run: |
#        Get-ChildItem -Path "C:\a\*.tar" -Recurse | Select @{Name="MB Size";Expression={ "{0:N1}" -f ($_.Length / 1MB) }}, Fullname, LastWriteTime;
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build.tar
        path: "C:/a/_temp/msys64/home/runneradmin/build.tar"
        retention-days: 7
