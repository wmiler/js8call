# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build for Debian x86_64

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_amd64_2404:
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # add ubuntu-latest-arm64 to runs-on to try rpi3+ build
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git cmake libhamlib-dev qt6-base-dev qt6-multimedia-dev qt6-serialport-dev \
          libusb-1.0-0-dev libfftw3-dev libboost-all-dev libudev-dev libxkbcommon-dev

    - name: Build Hamlib
      run: |
        git clone https://github.com/Hamlib/Hamlib.git ~/hamlib
        cd ~/hamlib
        git checkout 4.6.4
        ./bootstrap
        ./configure
        make -j 4
        sudo make install-strip
        sudo ldconfig

    - name: Build JS8Call
      run: |
        git clone https://github.com/js8call/js8call.git ~/js8call
        mkdir -p ~/js8call/build && cd ~/js8call/build
        cmake ..
        make -j 4

    - name: Package JS8Call
      run: |
        cd ~/js8call/build
        cpack -G DEB

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_amd64_ubuntu-24.04.deb
        path: ~/js8call/build/js8call_2.3.2-devel_amd64.deb
        retention-days: 7
        
  build_arm64_2404:
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # add ubuntu-latest-arm64 to runs-on to try rpi3+ build
    runs-on: ubuntu-24.04-arm

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git cmake libhamlib-dev qt6-base-dev qt6-multimedia-dev qt6-serialport-dev \
          libusb-1.0-0-dev libfftw3-dev libboost-all-dev libudev-dev libxkbcommon-dev

    - name: Build Hamlib
      run: |
        git clone https://github.com/Hamlib/Hamlib.git ~/hamlib
        cd ~/hamlib
        git checkout 4.6.4
        ./bootstrap
        ./configure
        make -j 4
        sudo make install-strip
        sudo ldconfig

    - name: Build JS8Call
      run: |
        git clone https://github.com/js8call/js8call.git ~/js8call
        mkdir -p ~/js8call/build && cd ~/js8call/build
        cmake ..
        make -j 4

    - name: Package JS8Call
      run: |
        cd ~/js8call/build
        cpack -G DEB

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: js8call_2.3.2-devel_arm64_ubuntu-24.04.deb
        path: ~/js8call/build/js8call_2.3.2-devel_arm64.deb
        retention-days: 7

